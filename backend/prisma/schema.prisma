// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                        String    @id @default(auto()) @map("_id") @db.ObjectId
  email                     String    @unique
  name                      String?
  password                  String

  emailVerified             Boolean   @default(false)
  verificationToken         String?
  verificationTokenExpires  DateTime?

  passwordResetToken        String?
  passwordResetTokenExpires DateTime?

  failedLoginAttempts       Int       @default(0)
  lockoutUntil              DateTime?

  twoFactorSecret           String?
  isTwoFactorEnabled        Boolean   @default(false)

  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt

  subscriptions             Subscription[]
  activeSessions            ActiveSession[]
}

model Subscription {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  username    String
  password    String // This will be encrypted
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model AuditLog {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  action      String
  userId      String?   @db.ObjectId
  details     String?
  ipAddress   String?
  userAgent   String?
  timestamp   DateTime  @default(now())
}

model ActiveSession {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  token       String    @unique
  ipAddress   String?
  userAgent   String?
  expiresAt   DateTime
  createdAt   DateTime  @default(now())
}
